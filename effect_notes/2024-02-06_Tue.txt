IN PROGRESS:
   - Update operating modes document
      - Interrupt handling routine
      - Make sure CDMF stuff is added

      - Deneb API command ID from deneb_enum.py

      - Meet with Murat and Sameep over API calls


TODO:
   - Request time off Feb 16 and 18
   - Send availability to prof for Wednesday February 14

   - Read through Credo FW
      - Share notes https://teams.microsoft.com/l/message/19:bc967ba2141943ae950a6cb1983e76f7@thread.tacv2/1707230179735?tenantId=7cae46a2-5dda-47a1-ad0c-666d0aead08c&groupId=5cca5a59-d8f6-45d1-a58d-f674eb2e3503&parentMessageId=1707230179735&teamName=Zapata&channelName=FW%20(SDK)&createdTime=1707230179735

Notes:
Docs:
- Or1k-MCU.md
   - Describes hardware and firmware of the Credo MCU
   - OpenRISC, single core, 16KB ROM for bootloader, 256KB SRAM
   - Additional information on peripherals
   - No operating system or dynamic memory, expected
- baseline.md
   - Lists modules in the baseline package
   - Bootloader, crt0 (startup), register access library, thread library, utilities library
- bootload6.md
   - Describes details of bootloader
   - Summarized in bootloader_diagram.svg
   - Start at _reset_vector in 100g_fw/src/reset4.S
   - Calls _boot_start in 100g_fw/src/boot6_stub.S
   - Calls boot6_real() in 100g_fw/src/boot6.c
      - Tries to read firmware from RAM, then tries SPI, then boots from Notepad
- crt0.md
   - Describes startup procedure
   - Start at _start in 100g_fw/src/reset4.S
   - Calls _reset() in 100g_fw/src/support2.c
   - Calls main at 100g_fw/src/rom_main_stub.c
- reg_access.md
   - Register access facility is called MDIO, but now uses I2C
   - 16-bit address space and 16-bit registers
   - Describes register read and write calls, 16 and 32 bit
   - Functions declared in 100g_fw/include/mdio.h
   - Functions defined in 100g_fw/src/mdio26.S, 100g_fw/src/mdio25_toggle.S, 100g_fw/src/mdio25_toggle.S, 100g_fw/src/lane_mdio.S
   - Register macros are located at 100g_fw/include/regs.h, register names are located at 100g_fw/include/zapata_regs.h
- thread.md
   - Describes thread libary, allowing for multiple processes to run simultaneously
   - Threads periodically yield, and wake up under certain conditions
- Misc utilities provided
   - Floating point emulation (single-precision only)
   - Common math functions (sqrt, log)
   - Other utility functions (gray coding)
- toolchain.md
   - Guide to install prequisite software: gcc, binutils, texinfo, etc.
   - or1ksim.tgz provided, describes how to make and run
Code:
Firmware Startup Procedure:


   - Read through ADC Skew doc
      - https://teams.microsoft.com/l/message/19:EPtGli9BOZDC3jflf9jqDnb0ihbPojD2dTE0sySmbrA1@thread.tacv2/1706107272832?tenantId=7cae46a2-5dda-47a1-ad0c-666d0aead08c&groupId=5cca5a59-d8f6-45d1-a58d-f674eb2e3503&parentMessageId=1706107272832&teamName=Zapata&channelName=General&createdTime=1706107272832

   - Help Eric F write Programmer's Guide
      - ADC CAL DC Offset
      - ADC CAL Gain Offset
      - ADC CAL Phase Offset
      - ADC CAL Timing Offset
      - Analog AGC
      - DSC Skew Estimator

   - Task 6: Review relevant Deneb API calls against what is needed for Zapata
      - Identify calls that overlap (need equivalent calls defined)
      - Identify gaps that need to be filled (need new calls defined)
      - Identify target MCU (chip or module), can use Jihad to help guide
      - Look into Zapata_Deneb_Opcode_Overview.xlsx, add Deneb API calls for each row

   - Task 10: Bring up Deneb eval board and verify configuration and operation for 100G ZR mode via GUI
      - Confirm startup script: startup_py_v1p8p3/mode_100G_QPSK_30_1b_47.py

   - Read through Credo Dove SDK

   - Read OpenRISC thesis

   - Udemy Embedded Software Design Patterns
   - Read Polarization Mode Dispersion book
   - SDK studying

DONE:
   - Guinea Pig for Bitbucket

   - Fill out last week's timecard
